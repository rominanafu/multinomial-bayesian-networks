---
title: "Unión de archivos en un solo dataframe"
format:
   html:
     toc: true
     html-math-method: katex
     embed-resources: true
     self-contained-math: true
     df-print: kable
---


## Variables de interés

De acuerdo con las queries que nos tocaron, las variables de interés son:

* Sexo
* Tipo de transporte que se utiliza (público o privado)
* Cantidad de carros
* Edad
* Estatus sociodemográfico
* Día en el que se viaja
* Horario en el que se viaja (en horas pico o no pico)

### Lectura de datos

Los datos de las encuestas se encuentran en 5 archivos separados, que contienen datos de la vivienda, del viaje, del transporte, del estrato sociodemográfico y del hogar. Estos los leemos para unir de manera posterior los datos que necesitamos en un mismo archivo.

```{r}
library(tidyverse)

vivienda = read.csv("eod_2017_csv/tvivienda_eod2017/conjunto_de_datos/tvivienda.csv")
viaje = read.csv("eod_2017_csv/tviaje_eod2017/conjunto_de_datos/tviaje.csv")
transporte = read.csv("eod_2017_csv/ttransporte_eod2017/conjunto_de_datos/ttransporte.csv")
sociodem = read.csv("eod_2017_csv/tsdem_eod2017/conjunto_de_datos/tsdem.csv")
hogar = read.csv("eod_2017_csv/thogar_eod2017/conjunto_de_datos/thogar.csv")
```

#### Dataframe queries 1 y 2

```{r}
df = unique(viaje[c("id_soc", "sexo", "edad")])

# Renombrar sexo a partir del catalogo
sexos = read.csv("eod_2017_csv/tviaje_eod2017/catalogos/sexo.csv")
df$sexo = factor(df$sexo, labels=sexos$descrip)

# Agrupar edades
df$edad[which(df$edad < 20)] = 0
df$edad[which((df$edad >= 20) & (df$edad < 46))] = 1
df$edad[which((df$edad >= 46) & (df$edad < 65))] = 2
df$edad[which(df$edad >= 65)] = 3
df$edad = factor(df$edad, labels=c("Joven", "Adulto joven", "Adulto", "Adulto mayor"))

# unión de viaje con transporte en dataframe temporal
df_temp = right_join(viaje[c("id_via", "id_soc")], transporte[c("id_via", "p5_3", "p5_14")], "id_via")
df_temp = right_join(df, df_temp, "id_soc")
df_temp$transporte_pub = df_temp$p5_14 %in% c(2, 5, 6, 8, 10, 11, 12, 13, 15)
df_temp$transporte_priv = df_temp$p5_14 %in% c(1, 3, 4, 7, 9, 14, 16, 17, 18, 19)
df_temp$viaje_entre_sem = df_temp$p5_3 == 1
df_temp$viaje_fin_de_sem = df_temp$p5_3 == 2

# Tipo de transporte
df$transporte_pub = right_join(df, aggregate(df_temp$transporte_pub, by = list(id_soc = df_temp$id_soc), FUN=sum), "id_soc")$x
df$transporte_pub[which(df$transporte_pub > 0)] = 1
df$transporte_priv = right_join(df, aggregate(df_temp$transporte_priv, by = list(id_soc = df_temp$id_soc), FUN=sum), "id_soc")$x
df$transporte_priv[which(df$transporte_priv > 0)] = 2
df$tipoTransporte = df$transporte_priv + df$transporte_pub
df$tipoTransporte = factor(df$tipoTransporte, labels=c("Ninguno", "Publico", "Privado", "Publico y privado"))

# Cantidad de carros y estrato sociodemográfico
hogar_sociodem <- right_join(hogar[c("id_hog", "p2_1_1", "estrato")], sociodem[c("id_soc", "id_hog")], "id_hog")
df_temp <- right_join(hogar_sociodem[c("id_soc", "p2_1_1", "estrato")], viaje["id_soc"], "id_soc")
df <- left_join(df, unique(df_temp[c("id_soc", "p2_1_1", "estrato")]), "id_soc")
colnames(df)[which(names(df) == "p2_1_1")] <- "tieneCarro"
df$tieneCarro[which(df$tieneCarro > 0)] = 1
df$tieneCarro = factor(df$tieneCarro, labels=c("No", "Si"))

# Renombrar estratos sociodemográficos a partir del catalogo
estratos = read.csv("eod_2017_csv/thogar_eod2017/catalogos/estrato.csv")
df$estrato = factor(df$estrato, labels=estratos$descrip)

# Eliminar columnas innecesarias
df = df[, !names(df) %in% c("id_soc", "transporte_pub", "transporte_priv")]

# Guardar datos en csv
write.csv(df, file="q12.csv", row.names=F)
```
